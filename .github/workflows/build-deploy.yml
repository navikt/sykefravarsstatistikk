name: Build and deploy

on: [push]

env:
    IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

concurrency:
    group: build-deploy-on-${{ github.ref }}
    cancel-in-progress: true

jobs:
    compile-test-and-build:
        name: Build and run tests
        runs-on: Ubuntu-20.04
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '16.14.2'
                  registry-url: https://npm.pkg.github.com/
            - uses: actions/cache@v3
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-node-cache-${{ hashFiles('yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-cache-

            - name: Install dependencies
              run: |
                  yarn install --frozen-lockfile
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

            - name: Run tests
              run: yarn test

            - name: Build application
              run: |
                  yarn run build
              env:
                  CI: false

            - name: Login to GitHub Docker Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push the Docker image
              run: |
                  docker build . -t ${IMAGE} 
                  docker push ${IMAGE}

    deploy-to-dev-gcp:
        name: Deploy to dev-gcp
        if: github.ref == 'refs/heads/bjella3'
        needs: compile-test-and-build
        runs-on: Ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-gcp
                  VAR: version=${{ env.IMAGE }}
                  RESOURCE: nais/dev-gcp.yaml
                  PRINT_PAYLOAD: true

    deploy-to-labs-gcp:
        name: Deploy to labs-gcp
        if: github.ref == 'refs/heads/master'
        needs: compile-test-and-build
        runs-on: Ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: labs-gcp
                  VAR: version=${{ env.IMAGE }}
                  RESOURCE: nais/labs-gcp.yaml
                  PRINT_PAYLOAD: true

    deploy-to-prod-gcp:
        name: Deploy to prod-gcp
        if: github.ref == 'refs/heads/master'
        needs: compile-test-and-build
        runs-on: Ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-gcp
                  VAR: version=${{ env.IMAGE }}
                  RESOURCE: nais/prod-gcp.yaml
                  PRINT_PAYLOAD: true

    deploy-alert-to-prod:
        name: Deploy alert to prod
        if: github.ref == 'refs/heads/master'
        needs: compile-test-and-build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-gcp
                  RESOURCE: nais/alerterator.yaml
